---
title: "Preliminary_plots_CH1"
output:
  pdf_document: default
  html_notebook: default
  word_document: default
  html_document:
    df_print: paged
---
This script runs through some preliminary analysis of the synthesis data set used in Chapter 1 to understand the biogeography of SCMs in the Southern Ocean

## Upload the data
```{r message=FALSE, warning=FALSE}
library(ggplot2)
library(mapproj)
library(raster)
library(ggpubr)
library(sf)
library(rgdal)
library(dplyr)
path = "C:/Users/kabaldry/Documents/PhD/Introduction_review/Data"
data_CTD = read.csv(file.path(path,"SCM_dataset_110919_4.csv"), header = T, stringsAsFactors = F)
data(wrld_simpl, package = "maptools")
wrld_subset <- crop(wrld_simpl, extent(-180, 180, -90, -30)) 
x_lines <- seq(130,150, by = 5)
setwd(file.path(path,"median_extent_S_09_1981-2010_polyline_v3.0"))
median_ice_sep = readOGR( dsn = ".",layer = "median_extent_S_09_1981-2010_polyline_v3.0")
median_ice_sep3 =spTransform(median_ice_sep, "+proj=stere +x_0=0 +y_0=0 +lon_0=0 +lat_0=-90")
median_ice_sep2 =spTransform(median_ice_sep3, "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
poly2 = rbind(coordinates(median_ice_sep2)[[1]][[1]],coordinates(median_ice_sep2)[[1]][[2]])

```

## Statistics of SCM occurances
The below presents some basic statistics
```{r}
print("Total Profiles")
total = nrow(data_CTD)
total
print("Total SCM Profiles")
length(which(data_CTD$SCM=="Y"))
print("% of total SCM")
length(which(data_CTD$SCM=="Y"))/total
print( "% of total SCM 2xsurface value or more")
length(which(data_CTD$SCM=="Y" & (data_CTD$surf_val/data_CTD$SCM_val) < 0.5))/total
print("% of total SCM less than 0.5 mg/m3 (HNLC)")
length(which(data_CTD$SCM=="Y" & (data_CTD$surf_val) < 0.5 ))/total
print( "% of total SCM 2xsurface value or more and greater than 0.5 mg/m3")
length(which(data_CTD$SCM=="Y" & (data_CTD$surf_val/data_CTD$SCM_val) < 0.5 & (data_CTD$surf_val) < 0.5))/total
print("% of total SCM less than 0.8 mg/m3 (H-H et al. (2004)")
length(which(data_CTD$SCM=="Y" & (data_CTD$surf_val) < 0.8 ))/total

```

## spatial distribution of data

```{r message=FALSE, warning=FALSE}
base =  ggplot() +
  geom_polygon(data =wrld_subset, aes(x = long, y = lat, group = group), fill = "lightblue", colour = "lightblue", alpha = 0.8) +
  geom_path(data = crop(orsifronts::orsifronts,extent(-180, 180, -70, -30)),aes(x=long,y=lat,group=group),col = "blue") +
  # Convert to polar coordinates
  coord_map("ortho", orientation = c(-90, 0, 0)) +
  scale_y_continuous(breaks = seq(-90, -30, by = 10), labels = NULL) +
  
  # Removes Axes and labels
  scale_x_continuous(breaks = NULL) +
  xlab("") + 
  ylab("") +
  # Adds axes
  geom_hline(aes(yintercept = -30), size = 1)  +
  # Change theme to remove axes and ticks
  theme(panel.background = element_blank(),legend.position = "top",
        panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
                                        colour = "black"),
        axis.ticks=element_blank(),plot.title = element_text( size=12))
  
  # geom_polygon(data =polys, aes(x = long, y = lat, group = group,fill = mechID,col=mechID), alpha = 1)+
  # geom_point(data = points, aes(x=Lon_1,y=Lat_1, fill = Mechanism,col=mechID),cex = 3,pch = 21)+
  # geom_line()+
  # new_scale("col")
p0 = base + geom_point(data = data_CTD, aes(x=Longitude, y = Latitude..S.),  pch = 16) + ggtitle("All data")
p1 = base + geom_point(data = data_CTD[which(data_CTD$SCM == "Y"),], aes(x=Longitude, y = Latitude..S.),  pch = 16) + ggtitle("SCM detected")
p2 = base + geom_point(data = data_CTD[which(data_CTD$SCM == "N"),], aes(x=Longitude, y = Latitude..S.),  pch = 16) + ggtitle("No SCM detected")

p0
ggarrange(plotlist = list(p1,p2))

```



## Distribution of chlorophyll concentrations plots 
All units are in mg/m3

Green line - low Chl (<1mg/m3) criteria of surface [chla] + 0.2 mg/m3
Red line - high Chl (>1mg/m3) criteria of 1.2*(surface [chla])
Black line = 1:1
```{r}
# Surf vs SCM - distributions
data_CTD = data_CTD[order(data_CTD$SCM),]
data_CTD$plot_col = "grey"
data_CTD$plot_col[which(data_CTD$SCM== "Y")] = "black"

plot(data_CTD$SCM_val,data_CTD$surf_val,ylim = c(0,5), xlim = c(0,5),pch = 16, xlab = "SCM Chla", ylab = "Surface Chla")
abline(0,1,lwd = 2)
abline(0,1/1.2,col = "red",lwd = 2)
#abline(0,0.5,col = "blue",lwd = 2)
#abline(v=0.5,lwd = 2)
abline(-0.2,1,lwd = 2,col = "darkgreen")


# plot SCM occurance by surf chla 
# par(mfrow = c(2,1),mar = c(4.5,4,0.5,0.5))
SC = seq(0,5,0.2)
SurfC = NA
for(sc in SC)
{
  if(sc != 5)
  {A = table(data_CTD$SCM[which(data_CTD$surf_val > sc & data_CTD$surf_val < (sc + 0.2))])}
  else(A = table(data_CTD$SCM[which(data_CTD$surf_val > sc)]))
  SurfC = cbind(SurfC,A)
  if(length(A)==0){SurfC = cbind(SurfC,NA)}
}
SurfC = SurfC[c(2,1),-1]
colnames(SurfC) = c(paste(SC[1:25],"-",SC[2:26], sep = ""),"5+")
barplot(SurfC,  ylab = "no. profiles",beside = F, xlab = "Surf Chla")

# plot SCM chla
SC = seq(0,5,0.2)
SCMC = NA
for(sc in SC)
{
  if(sc != 5)
  {A = table(data_CTD$SCM[which(data_CTD$SCM_val > sc & data_CTD$SCM_val < (sc + 0.2))])}
  else(A = table(data_CTD$SCM[which(data_CTD$SCM_val > sc)]))
  SCMC = cbind(SCMC,A)
  if(length(A)==0){SCMC = cbind(SCMC,NA)}
}
SCMC = as.matrix(rbind(SCMC[-1],rep(0,26)))
colnames(SCMC) = c(paste(SC[1:25],"-",SC[2:26], sep = ""),"5+")
barplot(SCMC,  ylab = "no. profiles",beside = F, legend = T,col = "gray30", xlab = "SCM Chla")





```

## Control of surface Chlorophyll
Holm-Hansen et al. proposed that SCM only ocurr in the Southern Ocean/HNLC when surface concentrations are less than 0.8 mg/m3

```{r}

p1 = base +  geom_point(data = data_CTD[which(data_CTD$SCM=="Y" & (data_CTD$surf_val) < 0.8),], aes(x=Longitude, y = Latitude..S.),  pch = 16) + ggtitle("SCM where surf < 0.8 mg/m3")
  
p2 = base +
  geom_point(data = data_CTD[which(data_CTD$SCM=="Y" & (data_CTD$surf_val) > 0.8),], aes(x=Longitude, y = Latitude..S.),  pch = 16) + ggtitle("SCM where surf > 0.8 mg/m3")

ggarrange(plotlist = list(p1,p2))

```


## Control of coastlines and bathymetry
Graham et al 2015 found that surface CHL is only greater than 10 mg/m3 less than 50km from coastlines, and greater than 5 mg/m3 ocurrs at differences less than 500km.

We find
- one occurance where 10 mg/m3 occurs between 50-500km from coastlines (near KP) (surf and SCM)
-Agreement that greater than 5 mg/m3 only occurs 500m from coastlines (Surf and SCM)
- Greater than 1000 distance from coast <1 mg/m3 observed (surf only)
- greater than 1300 km distance from coast -> only 4 SCM detected (collected in Febuary 2017)
```{r message=FALSE, warning=FALSE}
p1 = ggplot(data = data_CTD, aes(x = coast_dist, y = surf_val, fill =BATHY_DEPTH_m > -1000)) + geom_point(pch = 21) + scale_fill_discrete(name = "Bathymetry", labels = c(">1000", "<1000", "No coordinates")) + theme(legend.position = c(0.9, 0.9))+ 
  labs(x = "Distance from coast", y = "surface [Chla]")

p2 = ggplot(data = data_CTD[which(data_CTD$coast_dist > 1000),], aes(x = coast_dist, y = surf_val, fill =BATHY_DEPTH_m > -1000)) + geom_point(pch = 21) + scale_fill_discrete(name = "Bathymetry", labels = c(">1000", "<1000", "No coordinates")) + theme(legend.position = c(0.9, 0.9)) + labs(x = "Distance from coast", y = "surface [Chla]")


p3 = base + geom_point(data = data_CTD[which(data_CTD$surf_val > 5 ),], aes(x=Longitude, y = Latitude..S.),  pch = 16,size = 3) + ggtitle("surface [chla] > 5 mg/m3") 

p4 = ggplot(data = data_CTD, aes(x = coast_dist, y = SCM_val, fill =BATHY_DEPTH_m > -1000)) + geom_point(pch = 21) + scale_fill_discrete(name = "Bathymetry", labels = c(">1000", "<1000", "No coordinates")) + theme(legend.position = c(0.7, 0.8))+ 
  labs(x = "Distance from coast", y = "SCM [Chla]")

p5 = ggplot(data = data_CTD[which(data_CTD$coast_dist > 1000),], aes(x = coast_dist, y = SCM_val, fill =BATHY_DEPTH_m > -1000)) + geom_point(pch = 21) + scale_fill_discrete(name = "Bathymetry", labels = c(">1000", "<1000", "No coordinates")) + theme(legend.position = c(0.9, 0.9)) + labs(x = "Distance from coast", y = "SCM [Chla]")

p6 = base + geom_point(data = data_CTD[which(data_CTD$coast_dist > 1300),], aes(x=Longitude, y = Latitude..S.),  pch = 16,col = "black",size = 3) + ggtitle("SCM > 1300 km from coast are red") + geom_point(data = data_CTD[which(data_CTD$coast_dist > 1300 & data_CTD$SCM == "Y"),], aes(x=Longitude, y = Latitude..S.),  pch = 16, col = "red",size = 3)

ggarrange(plotlist = list(p1,p4))
ggarrange(plotlist = list(p2,p5))
ggarrange(plotlist = list(p3,p6))



print("The surace chla observed past 1000 km from coastlines is")
print("max")
max(data_CTD$surf_val[data_CTD$coast_dist > 1000], na.rm = T)
print("mean")
mean(data_CTD$surf_val[data_CTD$coast_dist > 1000], na.rm = T)
print("The SCM chla observed past 1000 km from coastlines is")
print("max")
max(data_CTD$SCM_val[data_CTD$coast_dist > 1000], na.rm = T)
print("mean")
mean(data_CTD$SCM_val[data_CTD$coast_dist > 1000], na.rm = T)
print("The number of SCMs past 1300 km from coast is")
length(which(data_CTD$coast_dist > 1300 & data_CTD$SCM == "Y"))
print("which is (%)")
length(which(data_CTD$coast_dist > 1300 & data_CTD$SCM == "Y"))/length(which(data_CTD$coast_dist > 1300))*100
print("they were collected in Feb 2017")
```




# Control of Bioregion and fronts
There are still some profiles which the bioregionalisation code doesnt work for.... need to ask the AAD why and find a work around. 

```{r}
data_CTD$Br[which(data_CTD$YYYY >2007 & data_CTD$Br %in% c("POOZ","PFZ","SAZ","STZ"))] = NA
data_CTD$Br[which(data_CTD$YYYY <1993 & data_CTD$Br %in% c("POOZ","PFZ","SAZ","STZ"))] = NA
length(which(is.na(data_CTD$Br)==F))

print("The number of profiles unclassified are:")
length(which(is.na(data_CTD$Br)==T))
print("number of profiles included biregion in analysis are")
length(which(is.na(data_CTD$Br)==F))
```


Some plots showing the spatial distribution of the bioregionalisation output.
To median september sea ice extent (1991-2010) is used here - also used to determine SIZ. Obtained from NSIDC.
```{r}
p0 = base + geom_point(data = data_CTD[is.finite(data_CTD$fr),], aes(x=Longitude, y = Latitude..S.),  pch = 16) + ggtitle("has frontal region")
p1 = base + geom_point(data = data_CTD[is.na(data_CTD$fr),], aes(x=Longitude, y = Latitude..S.),  pch = 16) + ggtitle("Missing frontal region")
ggarrange(p0,p1)

p4 = base + geom_point(data = data_CTD[!is.na(data_CTD$Br2),], aes(x=Longitude, y = Latitude..S., fill = as.factor(Br2)),  pch = 21) + ggtitle("Bioregions") + geom_line(data = data.frame(poly2),aes(x=poly2[,1], y=poly2[,2],col = "red"))+ theme(legend.title = element_blank())
p5 = base + geom_point(data = data_CTD[is.na(data_CTD$Br2),], aes(x=Longitude, y = Latitude..S.),  pch = 16) + ggtitle("missing Bioregion") + geom_line(data = data.frame(poly2),aes(x=poly2[,1], y=poly2[,2],col = "red")) +  scale_colour_manual(labels = "Median September sea-ice extent",values = "red") + theme(legend.title = element_blank())
ggarrange(p4,p5)
```

# Summary Table
```{r}

n_obs = stats::aggregate(data_CTD$SCM, by = list(data_CTD$Br), FUN = length)
n_SCM =  stats::aggregate(data_CTD$SCM[which(data_CTD$SCM == "Y")], by = list(data_CTD$Br[which(data_CTD$SCM == "Y")]), FUN = length)
sum1 =  stats::aggregate(data_CTD$SCM_d[which(data_CTD$SCM == "Y")], by = list(data_CTD$Br[which(data_CTD$SCM == "Y")]), FUN = mean)
sum2 =  stats::aggregate(data_CTD$SCM_d[which(data_CTD$SCM == "Y")], by = list(data_CTD$Br[which(data_CTD$SCM == "Y")]), FUN = sd)
sum3 =  stats::aggregate(data_CTD$SCM_val[which(data_CTD$SCM == "Y")], by = list(data_CTD$Br[which(data_CTD$SCM == "Y")]), FUN = mean)
sum4 =  stats::aggregate(data_CTD$SCM_val[which(data_CTD$SCM == "Y")], by = list(data_CTD$Br[which(data_CTD$SCM == "Y")]), FUN = sd)
sum5 =  stats::aggregate(data_CTD$surf_val[which(data_CTD$SCM == "Y")], by = list(data_CTD$Br[which(data_CTD$SCM == "Y")]), FUN = mean)
sum6 =  stats::aggregate(data_CTD$surf_val[which(data_CTD$SCM == "Y")], by = list(data_CTD$Br[which(data_CTD$SCM == "Y")]), FUN = sd)
sum7 =  stats::aggregate(data_CTD$surf_val[which(data_CTD$SCM == "N")], by = list(data_CTD$Br[which(data_CTD$SCM == "N")]), FUN = mean)
sum8 =  stats::aggregate(data_CTD$surf_val[which(data_CTD$SCM == "N")], by = list(data_CTD$Br[which(data_CTD$SCM == "N")]), FUN = sd)

df = cbind(n_SCM,sum1[,2],sum2[,2],sum3[,2],sum4[,2],sum5[,2],sum6[,2])
SCMsummary = left_join(n_obs,df, by = ("Group.1"))
SCMsummary = cbind(SCMsummary,sum7[,2],sum8[,2])
colnames(SCMsummary) = c("Bioregion","n","n(SCM = Y)","mean(SCM depth)", "sd(SCM depth)","mean(SCM [chla])", "sd(SCM [chla]","mean(surf [chla] SCMs)", "sd(surf [chla] SCMs)","mean(surf [chla] all)", "sd(surf [chla] all)")
SCMsummary = SCMsummary[c(1,6,4,3,5,7,2),]
SCMsummary
#write.csv(SCMsummary,file.path(path,"SCM summary by bioregion_050919.csv"),row.names = F)
```

#Plots by bioregion

```{r}
ggplot(data = data_CTD, aes(x= SCM_val, y= surf_val)) + geom_point() + facet_wrap(.~Br,nrow = 2) + geom_abline(slope = 1)
print("zoom")
ggplot(data = data_CTD, aes(x= SCM_val, y= surf_val)) + geom_point() + facet_wrap(.~Br,nrow = 2) + geom_abline(slope = 1) + xlim(0,7.5) + ylim(0,7.5)
```

```{r}
ggplot(data = data_CTD, aes(x= SCM_d, y= SCM_val)) + geom_point() + facet_wrap(.~Br,nrow = 2) +ylim(0,7.5)
ggplot(data = data_CTD, aes(x= SCM_d)) + geom_histogram() + facet_wrap(.~Br,nrow = 2) 
```

## Control of Sea Ice
Using satellite sea-ice data from raadtools (NSIDC concentration data, processed by the SMMR/SSMI NASA Team)

Looking only at SIZ and POOZ
Distance to ice-edge (15% sea ice concentration)
Ice-edge associated surface bloom?
```{r}
p1 = ggplot(data = data_CTD[which(data_CTD$SCM == "Y" & data_CTD$Br %in% c("SIZ","POOZ")),], aes(x = die, y = surf_val)) + geom_point(pch = 21)+  
  labs(x = "Distance from ice edge", y = "surface [Chla]") + ggtitle("SCM")
p2 = ggplot(data = data_CTD[which(data_CTD$SCM == "N" & data_CTD$Br %in% c("SIZ","POOZ")),], aes(x = die, y = surf_val)) + geom_point(pch = 21) + 
  labs(x = "Distance from ice edge", y = "surface [Chla]") + ggtitle("no SCM")
ggarrange(p1,p2)

p2 = ggplot(data = data_CTD[which(data_CTD$Br %in% c("SIZ","POOZ")),], aes(x = die, y = SCM_val)) + geom_point(pch = 21) + 
  labs(x = "Distance from ice edge", y = "SCM [Chla]") 
p2
```

```{r}
library(magrittr)
library(ggfortify)
data_CTD$SCMdiff = data_CTD$SCM_val - data_CTD$surf_val
data_CTD$SCM_norm = SCM_val/SCM_d
df_mds = data_CTD[which(data_CTD$SCM == "Y"),c("SCMdiff","SCM_norm","SCM_d","Br")]


autoplot(prcomp(df_mds[,1:3]),data = df_mds, colour = 'Br',, loadings = TRUE,loadings.label = TRUE)

```


```{r}
p1 = base + geom_point(aes(x=Longitude, y = Latitude..S.,col = SCM),pch=16) + ggtitle("SCM detected") + 
  facet_wrap(.~MM)
p2 = base + geom_point(data = data_CTD[which(data_CTD$SCM == "N" & data_CTD$Br2 == "PFZ"),], aes(x=Longitude, y = Latitude..S.,fill = as.factor(MM)),pch = 21) + ggtitle("No SCM detected")

ggarrange(p1,p2)

```

```{r}
p1 = base + 
  geom_point(data = data_CTD[which(data_CTD$SCM == "N"),], aes(x=Longitude, y = Latitude..S.),col = "black") +
  geom_point(data = data_CTD[which(is.na(data_CTD$Br2) == F & data_CTD$SCM_val-data_CTD$surf_val > 0.5),], aes(x=Longitude, y = Latitude..S., size = SCM_val - surf_val),pch=21, fill = br_colours[5]) 

p1 = base + geom_point(data = data_CTD[which(data_CTD$Br2 == "SIZ" ),], aes(x=Longitude, y = Latitude..S.,fill = as.factor(SCM), size = SCM_val - surf_val),pch=21)
```

```{r}
base =  ggplot(data_CTD[which(data_CTD$Br2 == "STZ" ),]) +
    geom_polygon(data =wrld_subset, aes(x = long, y = lat, group = group), fill = "lightblue", colour = "lightblue", alpha = 0.8) +
    geom_path(data = crop(orsifronts::orsifronts,extent(-180, 180, -70, -30)),aes(x=long,y=lat,group=group),col = "lightgrey") +
    # Convert to polar coordinates
    coord_map("ortho", orientation = c(-90, 0, 0)) +
    scale_y_continuous(breaks = seq(-90, -30, by = 10), labels = NULL) +
    
    # Removes Axes and labels
    scale_x_continuous(breaks = NULL) +
    xlab("") + 
    ylab("") +
    # Adds axes
    geom_hline(aes(yintercept = -30), size = 1)  +
    # Change theme to remove axes and ticks
    theme(panel.background = element_blank(),legend.position = "top",
          panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
                                          colour = "black"),
          axis.ticks=element_blank(),plot.title = element_text( size=12))

p1 = base + geom_point(aes(x=Longitude, y = Latitude..S.,col = SCM),pch=16) + ggtitle("SCM detected") + 
  facet_wrap(.~MM) + scale_colour_manual(values = c("black","red"))

```

