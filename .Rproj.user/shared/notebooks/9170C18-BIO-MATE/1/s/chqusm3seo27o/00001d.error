{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"BIOMATE::PROF_to_WHPE(path_out = file.path(path, \"reformatted_data\"), \n    file_path = file.path(path, \"BIO-MATE\", \"product_data\", \"processing_metadata\", \n        \"C5\"), userID = \"IMASUTASKB\", row_start = 12, row_end = 12)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"data[rowSums(is.na(data) | (data == \"\")) != ncol(data), ]","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"`[.data.frame`(data, rowSums(is.na(data) | (data == \"\")) != ncol(data), \n    )","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"rowSums(is.na(data) | (data == \"\"))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"is.data.frame(x)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"Ops.data.frame(data, \"\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(f)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(f)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"Ops.POSIXt(left, right)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"as.POSIXct(e2)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"as.POSIXct.default(e2)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"as.POSIXct(as.POSIXlt(x, tz, ...), tz, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"as.POSIXlt(x, tz, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"as.POSIXlt.character(x, tz, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(\"character string is not in a standard unambiguous format\")","line_number":0}],"message":"Error in as.POSIXlt.character(x, tz, ...) : \n  character string is not in a standard unambiguous format\n"}