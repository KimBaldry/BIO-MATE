{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"p_meta %>% add_row(variable = \"file_type\", stream = \"all\", description = \"The format of the file/s.\", \n    input = \"text delim or netcdf\") %>% add_row(variable = \"path\", \n    stream = \"all\", description = \"A path to where the file/s is stored.\", \n    input = \"A pathname that is R compatible\") %>% add_row(variable = \"extention\",  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Phytin_a\", stream = \"PIG\", description = \"The name of the variable for HPLC derived phaeophytin a.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Phide_a\", stream = \"PIG\", description = \"The name of the variable for HPLC derived phaeophorbide a.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Phaeopigments\", stream = \"PIG\", description = \"The name of the variable for HPLC derived bulk phaeopigments.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Viol_Neox\", stream = \"PIG\", description = \"The name of the variable for HPLC derived violaxanthin + neoxanthin.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"DT\", stream = \"PIG\", description = \"The name of the variable for HPLC derived diatoxanthin.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"DD\", stream = \"PIG\", description = \"The name of the variable for HPLC derived diadinoxanthin.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Neox\", stream = \"PIG\", description = \"The name of the variable for HPLC derived neoxanthin.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Alpha_Beta_car\", stream = \"PIG\", description = \"The name of the variable for HPLC derived alpha + beta carotene.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Epsilon_car\", stream = \"PIG\", description = \"The name of the variable for HPLC derived epsilon carotene.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Gamma_car\", stream = \"PIG\", description = \"The name of the variable for HPLC derived gamma carotene.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Beta_car\", stream = \"PIG\", description = \"The name of the variable for HPLC derived beta carotene.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Alpha_car\", stream = \"PIG\", description = \"The name of the variable for HPLC derived alpha carotene.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Violax\", stream = \"PIG\", description = \"The name of the variable for HPLC derived violaxanthin.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Zea_Lut\", stream = \"PIG\", description = \"The name of the variable for HPLC derived zeaxanthin + lutein.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Zeax\", stream = \"PIG\", description = \"The name of the variable for HPLC derived zeaxanthin.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Lutein\", stream = \"PIG\", description = \"The name of the variable for HPLC derived lutein.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Allox\", stream = \"PIG\", description = \"The name of the variable for HPLC derived alloxanthin.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Prasino\", stream = \"PIG\", description = \"The name of the variable for HPLC derived prasinoxanthin.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Perid\", stream = \"PIG\", description = \"The name of the variable for HPLC derived peridinin.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Fucox\", stream = \"PIG\", description = \"The name of the variable for HPLC derived fucoxanthin.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"19But\", stream = \"PIG\", description = \"The name of the variable for HPLC derived 19’butanoyloxyfucoxanthin.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"19Hex\", stream = \"PIG\", description = \"The name of the variable for HPLC derived 19’hexanoyloxyfucoxanthin.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"MgDVP\", stream = \"PIG\", description = \"The name of the variable for HPLC derived Mg 2,4 divinyl pheoporphyrin a5 monomethyl ester.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Chlc3\", stream = \"PIG\", description = \"The name of the variable for HPLC derived chlorophyll c3.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Chlc1_Chlc2\", stream = \"PIG\", description = \"The name of the variable for HPLC derived chlorophyll c1 + chlorophyll c2.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Chlc2\", stream = \"PIG\", description = \"The name of the variable for HPLC derived chlorophyll c2.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Chlc1_like\", stream = \"PIG\", description = \"The name of the variable for HPLC derived chlorophyll c1-like.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Chlc1\", stream = \"PIG\", description = \"The name of the variable for HPLC derived chlorophyll c1.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Chlc1_Chlc2_Mg_3_8_divinyl_pheoporphyrin_a5\", \n    stream = \"PIG\", description = \"The name of the variable for HPLC derived chlorophyll c1 + chlorophyll c2 + Mg 3,8 divinyl pheoporphyrin a5.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Chlc\", stream = \"PIG\", description = \"The name of the variable for HPLC derived chlorophyll c.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"DVChlb\", stream = \"PIG\", description = \"The name of the variable for HPLC derived divinyl chlorophyll b.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Chlb\", stream = \"PIG\", description = \"The name of the variable for HPLC derived chlorophyll b.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Chla_prime\", stream = \"PIG\", description = \"The name of the variable for HPLC derived chlorophyll a prime.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Chla_allom\", stream = \"PIG\", description = \"The name of the variable for HPLC derived chlorophyll a allomers.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Chla_ide\", stream = \"PIG\", description = \"The name of the variable for HPLC derived chlorophyllide.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Chla\", stream = \"PIG\", description = \"The name of the variable for HPLC derived chlorophyll a.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"DVChla\", stream = \"PIG\", description = \"The name of the variable for HPLC derived divinyl chlorophyll a.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"TACC\", stream = \"PIG\", description = \"The name of the variable for HPLC derived total accessory pigments.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"TCHLA\", stream = \"PIG\", description = \"The name of the variable for HPLC derived total chlorophyll a.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"FPHYTIN\", stream = \"PIG\", description = \"The name of the variable for fluorometrically derived phaeophytin.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"FPHEO\", stream = \"PIG\", description = \"The name of the variable for fluorometrically derived phaeopigments.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"FCHLORA\", stream = \"PIG\", description = \"The name of the variable for fluorometrically derived chlorophyll.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"PIG_u\", stream = \"PIG\", description = \"The units for pigment measurements recorded by the analyser.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"DEPTH\", stream = \"PIG,POC\", description = \"The name of the variable for depth of observation recorded by the analyser.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDNITRATE_u\", stream = \"PROF\", description = \"The units for oxygen collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDNITRATE\", stream = \"PROF\", description = \"The name of the variable for oxygen collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDPAR_u\", stream = \"PROF\", description = \"The units for photosyntheitically active radiation collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDPAR\", stream = \"PROF\", description = \"The name of the variable for photosyntheitically active radiation collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDXMISS_u\", stream = \"PROF\", description = \"The units for transmittance collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDXMISS\", stream = \"PROF\", description = \"The name of the variable for transmittance collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDBBP700_u\", stream = \"PROF\", description = \"The units for optical backscatter (700 nm) collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDBBP700\", stream = \"PROF\", description = \"The name of the variable for optical backscatter (700 nm) collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDBEAMCP_u\", stream = \"PROF\", description = \"The units for beam attenuation collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDBEAMCP\", stream = \"PROF\", description = \"The name of the variable for beam attenuation collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDFLUOR_u\", stream = \"PROF\", description = \"The units for fluorescence collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDFLUOR\", stream = \"PROF\", description = \"The name of the variable for fluorescence collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDOXY_u\", stream = \"PROF\", description = \"The units for oxygen collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDOXY\", stream = \"PROF\", description = \"The name of the variable for oxygen collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDSAL_u\", stream = \"PROF\", description = \"The units for salinity collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDSAL\", stream = \"PROF\", description = \"The name of the variable for salinity collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDTMP_u\", stream = \"PROF\", description = \"The units for temperature collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDTMP\", stream = \"PROF\", description = \"The name of the variable for temperature collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDPRS_u\", stream = \"PROF\", description = \"The units for pressure collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CTDPRS\", stream = \"PROF\", description = \"The name of the variable for pressure collected by the profiling sensor.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Underway_ID\", stream = \"PIG, POC\", description = \"How underway samples are identified within the dataset. Leave blank if there are no underway values within the dataset.\", \n    input = \"[variable name]-[value] or all\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"BOTTLE\", stream = \"PIG, POC\", description = \"The name of the variable containing bottle identifications.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Sample_ID\", stream = \"PIG, POC\", description = \"The name of the variable containing sample identification.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"POSITION_format\", stream = \"all\", description = \"The format of latitude and longitude data.\", \n    input = \"A string describing the format made up of %deg (degrees), %min (minutes), %sec (seconds) and %pos (for N/S/E/W specification)\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"LON_analyser\", stream = \"PIG, POC\", description = \"The name of the variable for longitude recorded by the analyser.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"LAT_analyser\", stream = \"PIG, POC\", description = \"The name of the variable for latitude recorded by the analyser.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"LONGITUDE_e\", stream = \"PROF\", description = \"The name of the variable for longitude at the end of the profiling cast.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"LONGITUDE_b\", stream = \"PROF\", description = \"The name of the variable for longitude at the bottom of the profiling cast.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"LONGITUDE_s\", stream = \"PROF\", description = \"The name of the variable for longitude at the start of the profiling cast.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"LATITUDE_e\", stream = \"PROF\", description = \"The name of the variable for latitude at the end of the profiling cast.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"LATITUDE_b\", stream = \"PROF\", description = \"The name of the variable for latitude at the bottom of the profiling cast.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"LATITUDE_s\", stream = \"PROF\", description = \"The name of the variable for latitude at the start of the profiling cast.\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"TIME_analyser_format\", stream = \"PIG, POC\", \n    description = \"Format of TIME_analyser.\", input = \"A format string code. See strptime in R for codes.\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"TIME_b_format\", stream = \"PROF\", description = \"Format for TIME_b, if different to TIME_format.\", \n    input = \"A format string code. See strptime in R for codes.\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"TIME_format\", stream = \"PROF\", description = \"Format for TIME.\", \n    input = \"A format string code. See strptime in R for codes.\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"TIME_analyser\", stream = \"PIG, POC\", description = \"The name of the variable for time of observation recorded by the analyser.  If recorded in header use header-[variable].\", \n    input = \"Text\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"TIME_e\", stream = \"PROF\", description = \"The name of the variable for time at the end of the profiling cast.\", \n    input = \"Text. If recorded in header use header-[variable].\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"TIME_b\", stream = \"PROF\", description = \"The name of the variable for time at the bottom of the profiling cast.\", \n    input = \"Text. If recorded in header use header-[variable].\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"TIME_s\", stream = \"PROF\", description = \"The name of the variable for time at the start of teh profiling cast.\", \n    input = \"Text. If recorded in header use header-[variable].\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"DATE_analyser_format\", stream = \"PIG, POC\", \n    description = \"Format for DATE_analyser.\", input = \"A format string code. See strptime in R for codes.\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"DATE_format\", stream = \"PROF\", description = \"Format for DATE.\", \n    input = \"A format string code. See strptime in R for codes.\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"DATE_analyser\", stream = \"PIG, POC\", description = \"The name of the variable for date of observation recorded by the analyser.\", \n    input = \"Text. If recorded in header use header-[variable].\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"DATE\", stream = \"PROF\", description = \"The name of the variable for the date of the profiling cast.\", \n    input = \"Text. If recorded in header use header-[variable].\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"CASTNO\", stream = \"all\", description = \"The name of the variable for the cast number at the profiling station.\", \n    input = \"Text. If recorded in header use header-[variable].\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"STNNBR\", stream = \"all\", description = \"The name of the variable for the station number of the profiling staation.\", \n    input = \"Text. If recorded in header use header-[variable].\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"TZ\", stream = \"all\", description = \"The time zone for date and time information.\", \n    input = \"Time zone code\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Method\", stream = \"PIG, POC\", description = \"The method used to analyse water samples for the published dataset.\", \n    input = \"A code to reference a method. See https://github.com/KimBaldry/BIO-MATE/product_data/supporting_information/BIOMATE_METHODS.txt\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"analysis_type\", stream = \"PIG, POC\", description = \"The type of analysis used on water samples for the published dataset.\", \n    input = \"A code to reference an analysis type. See https://github.com/KimBaldry/BIO-MATE/product_data/supporting_information/BIOMATE_METHODS.txt\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"citation\", stream = \"all\", description = \"The BIO-MATE citation tag/s used to reference a BibTEX entry for the published dataset.\", \n    input = \"A BIO-MATE citation tag\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"contact\", stream = \"all\", description = \"A contact for the published dataset.\", \n    input = \"E-mail address\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"Institution\", stream = \"all\", description = \"The institution/s who collected the data.\", \n    input = \"Names sepparated by a dash\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"PI\", stream = \"all\", description = \"The principle investigator/s responsible for the published dataset.\", \n    input = \"Names sepparated by a dash\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"source\", stream = \"all\", description = \"The data repository the data files were sourced from.\", \n    input = \"The short name of the data repository used within BIO-MATE. See https://github.com/KimBaldry/BIO-MATE/product_data/supporting_information/BIOMATE_SOURCES.txt.\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"EXPOCODE\", stream = \"all\", description = \"The EXPOCODE of the voyage associated with the data.\", \n    input = \"12-digit code\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"not_detected\", stream = \"PIG, POC\", description = \"The value or character used to indicate a variable was not detected in analysis.\", \n    input = \"value\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"missing_value\", stream = \"all\", description = \"The value or character used to indicate a missing value.\", \n    input = \"value\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"header_sep\", stream = \"all\", description = \"A separator used in headers of the file. Headers often store location data in profiling datasets and need extraction. Can be left empty.\", \n    input = \"colon, comma, dash, equals, space\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"delim\", stream = \"all\", description = \"Only fill if rectangular text-delimited file/s.\", \n    input = \"rect\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"extention\", stream = \"all\", description = \"The extension of the file/s.\", \n    input = \"text delim or netcdf\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"path\", stream = \"all\", description = \"A path to where the file/s is stored.\", \n    input = \"A pathname that is R compatible\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"add_row(., variable = \"file_type\", stream = \"all\", description = \"The format of the file/s.\", \n    input = \"text delim or netcdf\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"cnd_signal(error_incompatible_new_rows(extra_vars))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"signal_abort(cnd)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(fallback)","line_number":0}],"message":"Error: New rows can't add columns.\n[31mx[39m Can't find columns `variable`, `stream`, `description`, and `input` in `.data`.\n[90mRun `rlang::last_error()` to see where the error occurred.[39m\n"}